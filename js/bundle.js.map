{"version":3,"sources":["webpack/bootstrap 1bc719dcea4449a85b27","./js/main.js","./js/snake-view.js","./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,UAAU;AAC7B;;AAEA,sBAAqB,UAAU;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,0BAA0B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;;ACtEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1bc719dcea4449a85b27\n **/","var View = require('./snake-view.js');\n\n$l(function() {\n  var $figure = $l(\".snake\");\n  new View($figure);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require(\"./snake\");\n\nfunction View($el) {\n  this.$el = $el;\n  this.board = new Board();\n  this.snake = this.board.snake;\n\n  this.setupGrid();\n  // this.renderGrid();\n\n  // this.registerEvents();\n  // setInterval(this.step.bind(this), 1000);\n}\n\nView.DIRECTION_KEYS = {\n  87: \"N\",\n  65: \"W\",\n  83: \"S\",\n  68: \"E\"\n};\n\nView.prototype.setupGrid = function () {\n  var $row, $cell;\n\n  for (var row = 0; row < 50; row++) {\n    $row = $l('<div>').addClass('row').attr(\"id\", row);\n\n    for (var col = 0; col < 50; col++) {\n      $cell = $l('<div>').addClass('cell').attr(\"id\", col);\n\n      $row.append($cell);\n    }\n\n    this.$el.append($row);\n  }\n};\n\nView.prototype.renderGrid = function () {\n  var snakeSegments = this.snake.segments;\n  var x, y;\n  var $row;\n  var $cell = $l('.cell');\n\n  for (var i = 0; i < snakeSegments.length; i++) {\n    x = JSON.stringify(snakeSegments[i][0]);\n    y = JSON.stringify(snakeSegments[i][1]);\n\n    $row = this.$el.children().find('#' + x);\n    $cell = $row.children().find('#' + y);\n  }\n};\n\nView.prototype.registerEvents = function () {\n  this.$el.on(\"keydown\", this.handleKeyEvent.bind(this));\n};\n\nView.prototype.handleKeyEvent = function (e) {\n  var direction = View.DIRECTION_KEYS[e.keyCode];\n\n  if (direction) {\n    this.snake.turn(direction);\n  }\n};\n\nView.prototype.step = function () {\n  this.snake.move();\n  this.renderGrid();\n};\n\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 1\n ** module chunks = 0\n **/","// Coord class:\n\nfunction Coord(position) {\n  this.position = position;\n};\n\nCoord.DELTAS = {\n  \"N\": [-1,  0],\n  \"S\": [ 1,  0],\n  \"E\": [ 0,  1],\n  \"W\": [ 0, -1]\n};\n\nCoord.prototype.plus = function(direction) {\n  var delta = Coord.DELTAS[direction];\n  var row = this.position[0] + delta[0];\n  var col = this.position[1] + delta[1];\n\n  return new Coord([row, col]);\n};\n\nCoord.prototype.equals = function() {\n  return this.position;\n};\n\nCoord.prototype.isOpposite = function(direction) {\n\n};\n\n\n// Snake class:\n\nfunction Snake(direction) {\n  this.direction = direction;\n  this.segments = [];\n\n  this.setup();\n};\n\nSnake.OPPOSITE_DIR = {\n  \"N\": \"S\",\n  \"S\": \"N\",\n  \"E\": \"W\",\n  \"W\": \"E\"\n};\n\nSnake.prototype.setup = function() {\n  this.segments.push(new Coord([5, 5]));\n  this.segments.push(new Coord([6, 5]));\n  this.segments.push(new Coord([7, 5]));\n};\n\nSnake.prototype.move = function() {\n  var head = this.segments[0];\n  var newHead = head.plus(this.direction);\n\n  this.segments.pop();\n  this.segments.unshift(newHead);\n};\n\nSnake.prototype.turn = function(newDirection) {\n  if (this.isValidTurn(newDirection)) {\n    this.direction = newDirection;\n  }\n};\n\nSnake.prototype.isValidTurn = function(newDirection) {\n  var opposite = Snake.OPPOSITE_DIR[this.direction];\n\n  return opposite === newDirection;\n};\n\n\n// Board class:\n\nfunction Board() {\n  this.snake = new Snake(\"N\");\n}\n\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}